// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagement.Models;

#nullable disable

namespace StudentManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250325125943_BusinessRuleStatus")]
    partial class BusinessRuleStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("StudentManagement.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Khoa Luật"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Khoa Tiếng Anh thương mại"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Khoa Tiếng Nhật"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Khoa Tiếng Pháp"
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.Identification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HasChip")
                        .HasColumnType("bit");

                    b.Property<string>("IdentificationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Identifications");
                });

            modelBuilder.Entity("StudentManagement.Models.SchoolYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SchoolYears");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "18"
                        },
                        new
                        {
                            Id = 2,
                            Name = "19"
                        },
                        new
                        {
                            Id = 3,
                            Name = "20"
                        },
                        new
                        {
                            Id = 4,
                            Name = "21"
                        },
                        new
                        {
                            Id = 5,
                            Name = "22"
                        },
                        new
                        {
                            Id = 6,
                            Name = "23"
                        },
                        new
                        {
                            Id = 7,
                            Name = "24"
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.Student", b =>
                {
                    b.Property<string>("MSSV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiaChiNhanThuId")
                        .HasColumnType("int");

                    b.Property<int?>("DiaChiTamTruId")
                        .HasColumnType("int");

                    b.Property<int?>("DiaChiThuongTruId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdentificationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuocTich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolYearId")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("StudyProgramId")
                        .HasColumnType("int");

                    b.HasKey("MSSV");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DiaChiNhanThuId");

                    b.HasIndex("DiaChiTamTruId");

                    b.HasIndex("DiaChiThuongTruId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("IdentificationId");

                    b.HasIndex("SchoolYearId");

                    b.HasIndex("SoDienThoai")
                        .IsUnique()
                        .HasFilter("[SoDienThoai] IS NOT NULL");

                    b.HasIndex("StatusId");

                    b.HasIndex("StudyProgramId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentManagement.Models.StudentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StudentStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Đang học"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Đã tốt nghiệp"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Đã thôi học"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tạm dừng học"
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.StudyProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("StudyPrograms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chính quy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chất lượng cao"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Việt Pháp"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tiên tiến"
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.Student", b =>
                {
                    b.HasOne("StudentManagement.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Address", "DiaChiNhanThu")
                        .WithMany()
                        .HasForeignKey("DiaChiNhanThuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Address", "DiaChiTamTru")
                        .WithMany()
                        .HasForeignKey("DiaChiTamTruId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Address", "DiaChiThuongTru")
                        .WithMany()
                        .HasForeignKey("DiaChiThuongTruId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentManagement.Models.Identification", "Identification")
                        .WithMany()
                        .HasForeignKey("IdentificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentManagement.Models.SchoolYear", "SchoolYear")
                        .WithMany("Students")
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Models.StudentStatus", "StudentStatus")
                        .WithMany("Students")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Models.StudyProgram", "StudyProgram")
                        .WithMany("Students")
                        .HasForeignKey("StudyProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("DiaChiNhanThu");

                    b.Navigation("DiaChiTamTru");

                    b.Navigation("DiaChiThuongTru");

                    b.Navigation("Identification");

                    b.Navigation("SchoolYear");

                    b.Navigation("StudentStatus");

                    b.Navigation("StudyProgram");
                });

            modelBuilder.Entity("StudentManagement.Models.Department", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentManagement.Models.SchoolYear", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentManagement.Models.StudentStatus", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentManagement.Models.StudyProgram", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
